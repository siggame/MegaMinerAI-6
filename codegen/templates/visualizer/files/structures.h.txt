//Copyright (C) 2009 - Missouri S&T ACM AI Team
//Please do not modify this file while building your AI
//See AI.h & AI.cpp for that
#ifndef STRUCTURES_H
#define STRUCTURES_H

#include <iostream>
#include <vector>
#include <string>

% for i, animation in enumerate(animations):
const int ${animation.name.upper()} = ${i};
% endfor

% for model in models:
struct ${model.name}
{
%   for datum in model.data:
  ${conversions[datum.type]} ${datum.name};
%   endfor
  
  friend std::ostream& operator<<(std::ostream& stream, ${model.name} obj);
};

% endfor

struct Animation
{
  int type;
};

% for animation in animations:
struct ${animation.name} : public Animation
{
%   for datum in animation.data:
  ${conversions[datum.type]} ${datum.name};
%   endfor
  
  friend std::ostream& operator<<(std::ostream& stream, ${animation.name} obj);
};

% endfor

struct GameState
{
% for model in models:
  std::vector<${model.name}> ${lowercase(model.plural)};
% endfor
  
% for datum in globals:
  ${conversions[datum.type]} ${datum.name};
% endfor
  
  std::vector<Animation*> animations;
  friend std::ostream& operator<<(std::ostream& stream, GameState obj);
};

struct Game
{
  std::vector<GameState> states;
  std::string players[2];
  int winner;

  Game();
};

#endif
